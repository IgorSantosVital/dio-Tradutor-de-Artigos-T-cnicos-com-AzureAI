# -*- coding: utf-8 -*-
"""Untitled1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1uj0Qxh60z44KHW8XHIV7o6Q3HWpE03ra
"""

!pip install requests beautifulsoup4 openai langchain-openai

import requests
from bs4 import BeautifulSoup

def extract_text_from_url(url):
      response = requests.get(url)

      if response.status_code == 200:
        soup = BeautifulSoup(response.text, 'html.parser')
        for script_or_style in soup(["script", "style"]):
          script_or_style.decompose()
        texto = soup.get_text(separator= ' ')

        #limpar texto
        linhas = (line.strip() for line in texto.splitlines())
        parts = (phrase.strip() for line in linhas for phrase in line.split(" "))
        texto_limpo = '\n'.join(part for part in parts if part)
      else:
        print(f"Failed to retrieve the URL. Status code: {response.status_code}")
        return None

      text = soup.get_text()
      return text



extract_text_from_url('https://dev.to/kenakamu/azure-open-ai-in-vnet-3alo')

from langchain_openai.chat_models.azure import AzureChatOpenAI

client = AzureChatOpenAI(
    azure_endpoint= "https://oai-dio-bootcamp-eastus2-001.openai.azure.com/",
    api_key= "",
    api_version= "2024-02-15-preview",
    deployment_name= "gpt-4o-mini",
    max_retries = 0
)

def translaed_article(text, lang):
  messages = [
      ("system", "voce atua como tradutor de textos"),
      ("user", f"Traduza o {text} para o idioma {lang} e responda em markdown")
  ]

  response = client.invoke(messages)
  print(response.content)
  return response.content

translaed_article("One of the most important aspects when we use it in an Enterprise Environment is, of course, security.", "portugues")

url = 'https://dev.to/kenakamu/azure-open-ai-in-vnet-3alo'
text = extract_text_from_url(url)
article = translaed_article(text, "pt-br")

print(article)